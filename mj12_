#!/bin/bash
# -*- sh -*-

: << =cut

=head1 NAME

mj12_ - Wildcard-plugin to monitor majestic12 nodes.

=head1 CONFIGURATION

This plugin does not normally require configuration but it needs
xur17's MJ12monitor.jhh, which you can find here:
https://github.com/xur17/MJ12Monitor/blob/master/MJ12Monitor.jhh
A copy of this file is located here:
http://dontrm.org/8212858d1d99b57cdc5f9fb3cc9474c7
You must put these files into the /htdocs/tools/ directory of your
majestic12 node to work properly.

If your server does not listens to 127.0.0.1 port 1088 or your
username and password are not default you must specify some
configuration values as showed in this example:

  [mj12_1]
    env.key   value

    env.title My Majestic12 Node
    env.host  127.0.0.1
    env.port  1088
    env.user  majesticuser
    env.pass  secret
    env.ignore_[field] true
    env.show [field1]:[type1] [field2]:[type2] [field3]:[Å§ype3] [...]:[...]

The penultimate line of the above example completely hides a statistic
line from the entire graph.

The last line explicitly tries to output a value for [field] which
could be one of the listed ones in this link:
http://dontrm.org/a71157f0d90404d2ee89d31373171439

BUT CAREFUL! You _MUST_ set [type*] to the value "gauge" or "counter".
So it should look like:

    env.show currentupload:gauge

to the value "gauge" or "counter". You must set "counter", when the
value is rising only and "gauge" when it can also be decreased very often.


This is a wildcard plugin. To monitor an majestic12 node, link mj12_
to this file. E.g.

  ln -s /usr/share/munin/plugins/mj12_ /etc/munin/plugins/mj12_1

...will monitor the localhost:1088 server without any configuration.

=head1 AUTHOR

  fusl (Kevin Holly (Dedilink.eu))

=head1 LICENSE

GNU General Public License

=head1 VERSION

  $Id: mj12_.in 5 2012-09-16 11:43:00Z fusl $

=cut

. $MUNIN_LIBDIR/plugins/plugin.sh

NODEID=${0##*/mj12_}
HOST="${host:-127.0.0.1}"
PORT="${port:-1088}"
[ "$user" ] && USERNAME="--http-user=$user"
[ "$pass" ] && PASSWORD="--http-password=$pass"
[ "$title" ] && TITLE=$title || TITLE="$HOST:$PORT (ID $NODEID)"

relativelist="totalurls successes notfound timedout disallowed banned dnserrors connerrors forbidden403 other retries downloadeddata uploadeddata"
absolutelist="" # This value is currently empty because any values which belongs in here destroy our fancy graphs :-( ... BUT you can let them show explicitly (Scroll up and read CONFIGURATION for this... :-)

case $1 in
	config)
		echo "graph_title Majestic12 Stats for $TITLE"
		echo "graph_vlabel average x per update period"
		echo "graph_category network"
		echo "graph_info This graph shows Majestic12 node statistics for $TITLE"
		for relatives in $relativelist
		do
			hideignored="ignore_$relatives"
			if [ ! "${!hideignored}" ]
			then
				echo "$relatives.label $relatives"
				echo "$relatives.type COUNTER"
			fi
		done
		for absolutes in $absolutelist
		do
			hideignored="ignore_$absolutes"
			if [ ! "${!hideignored}" ]
			then
				echo "$absolutes.label $absolutes"
				echo "$absolutes.type GAUGE"
			fi
		done
		for shows in $show
		do
			shows_key="`echo $shows | awk -F':' '{print $1}'`"
			shows_value="`echo $shows | awk -F':' '{print $2}'`"
			hideignored="ignore_$shows_key"
			if [ ! "${!hideignored}" ]
			then
				if [ "$shows_value" == "gauge" ]
				then
					shows_type=GAUGE
				elif [ "$shows_value" == "counter" ]
				then
					shows_type=COUNTER
				fi
				if [ "$shows_type" ]
				then
					echo "$shows_key.label $shows_key"
					echo "$shows_key.type $shows_type"
				fi
			fi
		done
	;;
	*)
		wget -q -O- $USERNAME $PASSWORD http://$HOST:$PORT/tools/MJ12Monitor.jhh | while read line
		do
			column="`echo $line | tr -d ' ()' | awk -F':' '{print tolower($1)}'`"
			hideignored="ignore_$column"
			value="`echo $line | tr -d ' ,' | awk -F':' '{print $2}' | awk -F'(' '{print $1}'`"
			for key in $relativelist $absolutelist
			do
				if [ "$key" == "$column" ]
				then
					if [ ! "${!hideignored}" ]
					then
						echo "$key.value $value"
					fi
					break
				fi
			done
			for key in $show
			do
				key_key="`echo $key | awk -F':' '{print $1}'`"
				if [ "$key_key" == "$column" ]
				then
					if [ ! "${!hideignored}" ]
					then
						key_value="`echo $key | awk -F':' '{print $2}'`"
						if [ "$key_value" == "gauge" -o "$key_value" == "counter" ]
						then
							echo "$key_key.value $value"
						fi
					fi
				fi
			done
		done
	;;
esac
